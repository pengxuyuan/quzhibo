---
date: 2017-01-04 22:39
status: public
title: 'iOS 面试小灶直播 - 简历、面试题、进阶'
---

本期趣直播视频：

主播简介
孙源Sunny
多年专注于 iOS 开发，现就职于滴滴 App 架构组，在技术上做探索和深挖；善于刨根问底，对未知的东西兴趣强烈，代码风格强迫症；同时喜欢写博客(blog.sunnyxx.com)，线上线下分享(@我就叫Sunny怎么了)，贡献开源(forkingdog) 累计 star 破万
[本次分享的 keynote 和 高清无码的clang 视频](https://pan.baidu.com/share/home?uk=2885973690)

扫码加主播微信，后续交流~记得介绍自己哦~

以下为本次直播内容的文字总结版，直播中的PPT和福利在原文后面哦~
##前言
这次开小灶直播讲讲 iOS 面试 相关的事情，时长 1.5h ~ 2h (总时长3h,满满的干货，小编是跪着听完的- -)
包括:
简历 Review，以面试官的角度看看简历中哪里比较重要
从几个经典的基础面试题入手，引申出 iOS 基础技术知识
介绍几个进阶点的面试题，看如何从一个点向深度性原理性的技术去探索
谈谈面试时的注意点
##前戏
我直接负责面试、招聘有很长一段时间了，面过不少人，看过N分简历，之前有一些心得写在blog上面。
今天直播主要分以下几点讲:
·iOS面试简历中一些需要注意的事项
·面试中我作为面试官遇到的一些问题
·讲几个新的面试题 大家一起玩一玩
·iOS进阶 如何学习 如何提高自己
##iOS简历Review
之前也刷过几百份简历，也发现了一些问题，这里总结一下：
###项目描述过于简单宽泛
>
项目规模？你在其中的职责？详细介绍使用的技术栈？遇到的挑战以及如何解决的？

面试官想要看的是你的这项目的是多大规模的，我面试的时候一般都会问:这个App是几个人做的呀，你扮演什么角色呀，你负责什么模块呀，用到了什么技术啊，最关键的是想知道你在做项目的过程中遇到什么样的问题，遇到哪些坑，你如何去解决这个问题的过程，写了这些比那些写十几行宽泛的掌握了什么技术更加能打动面试官。

###专业技能千篇一律
>在列举技术名词的时候最好写出用这个技术干了什么，比如 “熟练应用 objc  runtime 技术，曾使用它做了 ViewController 进入和退出时的 AOP 埋点”

这快大家都是千篇一律的，每个人写的都差不多， 都是精通熟练的掌握了某项技能，但是面试的时候我仔细去问的时候，又跟我想的并不一样；最好在在列举技术名词的时候最好写出用这个技术干了什么，不要简单说你会OC、会runtime 面试官不知道你到底熟练掌握了什么，如果你只是在别人的博客或者在网上看了一些资料，这些我觉得不能算是熟练掌握，你真的用才算用；比如 “熟练应用 objc  runtime 技术，曾使用它做了 ViewController 进入和退出时的 AOP 埋点”。

###格式、拼写、细节
>
Object-C            -->Objective-C
Foudation           -->Foundation
ios / IOS / Ios     -->iOS  (iPhone OS）
AFNetWorking    -->AFNetwoking
xCode / Xcode    -->Xcode

###提供更多信息来体现你的特别
>Blog
GitHub
技术探索
对技术的个人理解
做过什么有意思的事儿

之前发了一条招聘了，来了50份简历，然后我挨个看了一遍，但是没有几个能让我印象深刻吧，然后你需要拿一些简历上面不一样的东西来吸引眼球，体现你不一样的东西，Blog这个东西，我觉得不要想到太功力化吧，不是说了写blog而写blog，GitHub平时写的小玩意可以放上去，但是决定放上去之前，自己先Review下，因为面试官可能会上去看下你代码写的怎么样。曾经遇到过GitHub和Blog造假的，我觉得这个行为不是太好，我看了下一个面试者的Blog，我看到一个星期有十几二十篇Blog，我就问他你怎么做到的，然后他说：只要你努力，你也可以做到的。当时我就哭了- -，通过Blog 博客，可以体现你对技术的探索，比如你对runtime、runloop感兴趣，这些写出来会比那些干巴巴的列举会好。

###谦虚、真实
>一言不合就“精通” 
拒绝虚假简历

这个涉及到诚信的问题，大家的水平参差不齐，有人初级，有人高级，但是肯定都是从初级过来的；我刚毕业出来的时候也是这样子，一开始面试了百度没有过，然后我回到我之前实习的公司从头慢慢开始干呗，这个很正常的，这个技术提升还是得看自己。

###我的一般套路
>
·最近工作经历中，做的什么 App，拿出来耍一耍，询问面试者负责的是哪部分 【考察前一份工作的难度】
·让面试者找个最熟悉的业务，描述下大概的设计结构、UI 层级、控件的使用、布局、交互效果等【考察基本业务能力、熟练程度、质量】
·考察几个基础的问题，如内存管理、多线程，若答的不错，顺着引申几个深入的问题
·从简历中声称熟练或掌握的技术中找几个深聊下【考察对技术的深挖能力、探索能力和原理性的掌握】
·若答的一般，让面试者找自己研究过的，或者有心得的东西，或熟练地东西，你会什么咱们问什么
·若前面回答的非常不错，考虑更考验深度的问题。
·顺带看看沟通是否顺畅

###面试上百人后的感受
>
·面试者觉得全场的题都很简单的，很可能是基础问题答错太多以至于觉得没必要问更难的
·不会的问题可以适当的猜一下，不要陷入无限的思考，不要一本正经的胡说八道，如果感兴趣可以让面试官教教你
·沟通顺畅是很加分的
·保持谦虚，不要装x

##几个iOS面试题
##谈谈iOS进阶
>
·看什么书才能进阶啊？
·现在每天忙于业务开发，根本没有提升，加班也没时间去学习
·是不是只有精通 C、C++ 才能进阶？赶紧看看 runtime 源码吧？
·哇，大神好厉害，大神说的对，这个好高端，转转转，@我的印象笔记

很多人问题看什么书再能进阶呀，其实我干iOS到现在，看的书没几本，基本上都是自己倒腾，看书毕竟是看，不如自己实践来的印象深刻，现在iOS进阶的书比较少,看过两本还不错的书：[Effective Objective-C 2.0 编写高质量iOS与OS X 代码的52个有效方法](http://item.jd.com/11402853.html)、[Objective-C高级编程 iOS与OS X多线程和内存管理](http://item.jd.com/11258970.html) 。

对于忙于业务开发，根本没有提升，加班也没时间去学习。其实这个并不影响个人提升，你做业务开发也有做的好，做的不好的，不能说天天做UI的事情就不能提升，可以用开源的框架少做一些重复的工作，自己可以写一些通用的东西，这样子可以方便同事，节省开发时间还可以提升自己能力。

转发这个事情，我们应该抱着辩证的态度去看他们的博客，自己多试一试，这样子才会进步。

##对iOS进阶的理解
4张图片
































##QA
1.为什么Swift编译速度比Objective-C慢呢？
swift编译过程比oc的编译过程更加复杂，因为swift有自己的中间语言，ir 自己做哦了优化，API不要太稳定
做一个测试
open test.swift
class Sark{
func fuck(){}
}
 swiftc test.swift
 ./test
 
 MachOView软件 看下过程
 swift多了很多结构来支撑运行时，还包括了OC的方法 吧比OC的复杂
 

 touch main.m
  open main.m
  #import <Foundation/Foundation.h>
@interface Sark
@impl 
 
  int main (){
retutn 1;
  }
 
 编译 clang -fmodules main.m -o main
 ./mian
 
OC可执行文件 同样一个类 OC比Swift比较简洁，Swift比较大
ll main
ll test 
这里相差5倍 有可能是swift 一个运行时的代码打进去了，有可能血多几个类，就不会重复添加这些运行时代码了

2.源码打成动态库 这样子链接会比较快一点

3.苹果为什么推出Swift代替OC
OC是C的超集，SmallTalk C ，写C的人希望用到SmakkTalk里面的面向对象，发展成OC 时间的推移  赶不上其他语音的趋势 编译器升级 更好的机会OC-》Swift